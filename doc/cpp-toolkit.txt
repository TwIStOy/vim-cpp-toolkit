*cpp-toolkit.txt*                          Useful functions for c++ development

Version: 0.1
Author:  Hawtian Wang <twistoy.wang@gmail.com>
License: MIT license

===============================================================================
CONTENTS                                             *cpp-toolkit-contents*

Introduction                                         |cpp-toolkit-introduction|
Requirements                                         |cpp-toolkit-requirements|
Usage                                                |cpp-toolkit-usage|
Interface                                            |cpp-toolkit-interface|
  Functions                                          |cpp-toolkit-functions|
  Options                                            |cpp-toolkit-options|

===============================================================================
INTRODUCTION                                         *cpp-toolkit-introduction*

*cpp-toolkit* contains all functions you need when editing c++ files.

===============================================================================
REQUIREMENTS                                         *cpp-toolkit-requirements*

- vim7.4.330 or higher.
- vim compiled with Python3 support. You can check by using
  `echo has('python3')` to see if the result if 1.

===============================================================================
USAGE                                   *cpp-toolkit-usage*

===============================================================================
INTERFACE                               *cpp-toolkit-interface*

-------------------------------------------------------------------------------
FUNCTIONS                         *cpp-toolkit-functions*

                                  *cpp_toolkit#corresponding_file()*
cpp_toolkit#corresponding_file()
    Return all corresponding candidates of current file.
        Header -> [Sources]
        Source -> [Headers]
    If not a valid c/cpp file, `v:none` returned.

                                  *cpp_toolkit#mark_current_function_decl()*
cpp_toolkit#mark_current_function_decl()
    Mark function under cursor.

                                  *cpp_toolkit#generate_function_define_here()*
cpp_toolkit#generate_function_define_here()
    Generate marked function's define under cursor. This function must be called
    after *cpp_toolkit#mark_current_function_decl()* has been called.

-------------------------------------------------------------------------------
OPTIONS                                        *cpp-toolkit-options*

g:cpp_toolkit_project_marker                   *g:cpp_toolkit_project_marker*
    List. Marker to detect if a directory is root of current project.
    Default value is ['.include_hints', 'CMakeLists.txt', '.git'].

g:cpp_toolkit_custom_associated                *g:cpp_toolkit_custom_associated*
    Dict. Associate header and source files' ext. Builtin associated:
        >
        {
            '.c':   ['.h',   '.hh',  '.hpp', '.hxx'],
            '.cpp': ['.hpp', '.hxx', '.hh',  '.h'],
            '.cc':  ['.hh',  '.hxx', '.hpp', '.h'],
            '.cxx': ['.hxx', '.hpp', '.hh',  '.h'],
            '.h':   ['.c',   '.cxx', '.cpp', '.cc'],
            '.hh':  ['.cc',  '.cxx', '.cpp', '.c'],
            '.hpp': ['.cpp', '.cc',  '.hxx', '.c'],
            '.hxx': ['.cxx', '.cc',  '.hpp', '.c'],
        }
        <
    Default value is {}.

g:cpp_toolkit_header_folders                   *g:cpp_toolkit_header_folders*
    List. Folder path relative with project's root to store header files. When
    finding corresponding header for a source file, we will try to replace
    *g:cpp_toolkit_source_folders* into *g:cpp_toolkit_header_folders*.
    Default value is ['include', ['..', 'include'], 'inc'].

g:cpp_toolkit_source_folders                   *g:cpp_toolkit_source_folders*
    List. See *g:cpp_toolkit_header_folders*.
    Default value is ['src', 'source', 'srcs', 'sources'].

g:cpp_toolkit_clang_library                    *g:cpp_toolkit_clang_library*
    String. llvm and clang library to find libclang dynamic library and headers.
    No default value. You must specify it.

===============================================================================

vim:tw=78:ts=8:ft=help:norl:noet:fen:
